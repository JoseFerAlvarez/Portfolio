---
/** Classes and types */
import type { GetStaticPaths } from "astro";
import Developer from "../../classes/Developer";
import Project from "../../classes/Project";

/** Functions */
import {
    listContents,
    getFileContent,
    listProjectContents,
} from "../../functions/helpers";
import {
    getDeveloperData,
    getDeveloperProjects,
    getProjectContents,
} from "../../functions/fetches";

/** Components */
import Layout from "../../layouts/Layout.astro";
import { Code } from "astro/components";
import ProjectFilesTab from "../../components/ProjectFilesTab.astro";

const { id } = Astro.params;

export const getStaticPaths = (async () => {
    /** Gets developer data */
    const developer = new Developer();
    const developerData = await getDeveloperData();
    developerData && (developer.setDeveloper = developerData);

    /** Gets projects data */
    const projects = await getDeveloperProjects(developer);
    projects && (developer.projects = projects);

    /** Gets contents data */
    const promises: any = developer.projects?.map(async (project) => {
        await getProjectContents(project, developer.username);
    });

    await Promise.all(promises?.map((promise: any) => promise));

    return await listContents(developer).map((path) => ({
        params: { id: path },
    }));
}) satisfies GetStaticPaths;

/** Gets developer data */
const developer = new Developer();
const developerData = await getDeveloperData();
developerData && (developer.setDeveloper = developerData);

/** Gets projects data */
const projects = await getDeveloperProjects(developer);
projects && (developer.projects = projects);

/** Gets contents data */
const promises: any = developer.projects?.map(async (project) => {
    await getProjectContents(project, developer.username);
});

await Promise.all(promises?.map((promise: any) => promise));

const paths = id.split("-");
const content = getFileContent(developer, paths, 0);

const currentProject: Project = projects.filter(
    (project: Project) => project.name === paths[0],
)[0];
---

<Layout title={content.name}>
    <section>
        <ProjectFilesTab project={currentProject} />
        <Code
            code={content.document_text}
            lang={content.type}
            theme="slack-dark"
            wrap
        />
    </section>
</Layout>
