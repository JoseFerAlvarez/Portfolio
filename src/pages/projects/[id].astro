---
import type { GetStaticPaths } from "astro";
import Developer from "../../classes/Developer";
import { getContents } from "../../functions/checkContents";
import { listContents } from "../../functions/listContents";
import Layout from "../../layouts/Layout.astro";
import { getFileContent } from "../../functions/getFileContent";
import { Code } from "astro/components";

const { id } = Astro.params;
const developer = new Developer();
const data = await developer.fetchDeveloper();
data && (developer.setDeveloper = data);

const projects = await developer.fetchDeveloperProjects();
projects && (developer.projects = projects);

const promises: any = developer.projects?.map(async (project) => {
    await getContents(project, developer.username);
});

await Promise.all(promises?.map((promise: any) => promise));

export const getStaticPaths = (async () => {
    const developer = new Developer();
    const data = await developer.fetchDeveloper();
    data && (developer.setDeveloper = data);

    const projects = await developer.fetchDeveloperProjects();
    projects && (developer.projects = projects);

    const promises: any = developer.projects?.map(async (project) => {
        await getContents(project, developer.username);
    });

    await Promise.all(promises?.map((promise: any) => promise));

    return await listContents(developer).map((path) => ({
        params: { id: path },
    }));
}) satisfies GetStaticPaths;

const paths = id.split("-");

const content = getFileContent(developer, paths, 0);
---

<Layout title={content.name}>
    <section>
        <Code
            code={content.document_text}
            lang={content.type}
            theme="slack-dark"
            wrap
        />
    </section>
</Layout>
